# Adds autocomplete="off" to login form fields. This lets
# browsers know the data is sensitive, but some browsers
# will still give the user the option to save the data.
login.autocomplete.off.enabled=false

# Click-jacking defense via not allowing content to be
# framed.  DENY and SAMEORIGIN are allowed values. 
# Set to false to remove the header. 
x-frame-options.header=DENY

# Brute force login prevention
brute.force.throttle.enabled=true
# Seconds to wait when the cache of failed logins is full
brute.force.max.wait=60
# How many failed logins before the throttle
# reaches maximum wait time. If the number of users is large
# and they are often mistyping their credentials, you might
# increase this to keep the penalty lower for the average
# failure rate.
brute.force.cache.size=15
# Relax the wait time after this many seconds
brute.force.expired.period=300

# Strong password policy requires at least three of
# Upper, lower, digit, and special character
password.policy.strong=true
password.policy.min.length=8
password.policy.max.length=255

# Subversion password storage. 
# The admin account does not generally need to use svn 
# directly, so this can be set the same or close to the value
# for springsecurity set in security.groovy.
password.svn.bcrypt.cost.factor.admin=13
# Set the basic cost factor as high as subversion performance
# will allow.  If your usage requires a more secure setting, 
# but performance is not adequate, using LDAP could be an 
# alternative. The hashing algorithm may not be more secure, 
# but it will centralize the data and allow less direct access 
# to the password storage.
password.svn.bcrypt.cost.factor.basic=8

# Set to true will allow editing hook scripts via the web 
# interface. This is not enabled by default as a hook
# script is arbitrary code to be run on the server and that 
# may be considered a security issue in some organizations.
hook.script.editor.enabled=false
